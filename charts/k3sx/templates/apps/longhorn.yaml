{{ $host := printf "%s.%s" .Values.subdomains.longhorn_ui .Values.domain -}}
{{ $path := "/" -}}
{{ $url := printf "https://%s%s" $host $path -}}

kind: Namespace
apiVersion: v1
metadata:
  name: longhorn-system
---
apiVersion: v1
kind: Secret
metadata:
  name: s3-secret
  namespace: longhorn-system
type: Opaque
data:
  # See https://longhorn.io/docs/1.2.4/snapshots-and-backups/backup-and-restore/set-backup-target/#set-up-aws-s3-backupstore
  AWS_ACCESS_KEY_ID: {{ .Values.s3_backup.access_key.id | b64enc | quote }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.s3_backup.access_key.secret | b64enc | quote }}
  AWS_ENDPOINTS: {{ .Values.s3_backup.endpoint | b64enc | quote }}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  interval: 5m
  chart:
    spec:
      chart: longhorn
      version: '1.2.4'
      sourceRef:
        kind: HelmRepository
        name: longhorn
        namespace: flux-system
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    defaultSettings:
      # See https://longhorn.io/docs/1.2.4/snapshots-and-backups/backup-and-restore/set-backup-target/#set-up-aws-s3-backupstore
      backupTarget: {{ printf "s3://%s@%s/" .Values.s3_backup.bucket .Values.s3_backup.region }}
      backupTargetCredentialSecret: s3-secret

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization
        nginx.ingress.kubernetes.io/auth-signin: {{ printf "%s?rd=%s" (include "urls.authproxy_login" .) (urlquery $url) }}
        nginx.ingress.kubernetes.io/auth-url: {{ include "urls.authproxy_check" . }}
      host: {{ $host }}
      tls:
        - hosts:
            - {{ $host }}
          secretName: longhorn-cert
