apiVersion: v1
kind: Secret
metadata:
  name: s3-secret
  namespace: longhorn-system
type: Opaque
data:
  # See https://longhorn.io/docs/1.2.4/snapshots-and-backups/backup-and-restore/set-backup-target/#set-up-aws-s3-backupstore
  AWS_ACCESS_KEY_ID: {{ .Values.s3_backup.access_key.id | b64enc | quote }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.s3_backup.access_key.secret | b64enc | quote }}
  AWS_ENDPOINTS: {{ .Values.s3_backup.endpoint | b64enc | quote }}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  interval: 5m
  chart:
    spec:
      chart: longhorn
      version: '1.3.0'
      sourceRef:
        kind: HelmRepository
        name: longhorn
        namespace: flux-system
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    defaultSettings:
      # See https://longhorn.io/docs/1.2.4/snapshots-and-backups/backup-and-restore/set-backup-target/#set-up-aws-s3-backupstore
      backupTarget: {{ printf "s3://%s@%s/" .Values.s3_backup.bucket .Values.s3_backup.region }}
      backupTargetCredentialSecret: s3-secret
    persistence:
      defaultClass: true
      defaultClassReplicaCount: 2
      defaultDataLocality: best-effort
    ingress:
      {{ $url := printf "https://%s" .Values.hosts.longhorn -}}
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization
        nginx.ingress.kubernetes.io/auth-signin: {{ printf "%s?rd=%s" (include "get_sso_config" (dict "key" "authproxy_login_url" "context" $)) (urlquery $url) }}
        nginx.ingress.kubernetes.io/auth-url: {{ printf "%s?allowed_groups=%s" (include "get_sso_config" (dict "key" "authproxy_check_url" "context" $)) (include "get_sso_config" (dict "key" "admin_group" "context" $) | urlquery) }}
      host: {{ .Values.hosts.longhorn }}
      tls:
        - hosts:
            - {{ .Values.hosts.longhorn }}
          secretName: longhorn-cert
